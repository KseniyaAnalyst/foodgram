version: '3.3'

services:
  db:
    image: postgres:13.10
    container_name: foodgram-db
    env_file:
      - .env
    volumes:
      - ../data/postgres_data:/var/lib/postgresql/data/
    restart: always

  backend:
    build: ../backend
    container_name: foodgram-backend
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      - ../backend/media:/app/media
      - ../backend/static:/app/static
    restart: always
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn foodgram.wsgi:application --bind 0.0.0.0:8000"

  frontend:
    build: ../frontend
    container_name: foodgram-front
    volumes:
      - ../frontend/result_build:/app/result_build

  nginx:
    image: nginx:1.25.4-alpine
    container_name: foodgram-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/result_build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - ../backend/media:/app/media
      - ../backend/static:/app/static
    depends_on:
      - backend
      - frontend
